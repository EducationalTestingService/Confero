###############################################################################
#
# PLEASE READ:
#
# TWO settings in this file MUST BE UPDATED when the software is first being
# setup for a given computer / screen resolution; if they are incorrect
# the software will generate bad data and not function correctly:
#
# 1. ioHub -> config : Relative path of the iohub config file, including the
#   file name. Path must be relative to the application run.py script location.
#
# 2. screen_capture->screen_resolution : Resolution of the *data collection*
#   app. display that screen capture video will be coming from.
#
###############################################################################
  
# ioHub client side settings

event_buffer_length: 1048

process_affinity: []
remaining_processes_affinity: []

ioHub:
    process_affinity: []
    #config: ..\iohub_config_no_eyetracker.yaml
    config: ..\iohub_config_tobii.yaml
    #config: ..\iohub_config_smi.yaml

################# ETS Screen Streaming Application Specific ###################

results_root_folder: .\results
experiment_inactive_token:

auto_launch_webapp:

data_collection:
    video_event_sync:
        region: [0, 0, 20, 20]
        colors: [255, 0]
        phase_duration: 0.125
        cycle_count: 15

    recording_period:
        start_msg: RECORDING_STARTED
        event_period:
            start_msg: START_EVENT_PERIOD
            end_msg: END_EVENT_PERIOD
        end_msg: RECORDING_STOPPED

    event_filters:
        tracker:
            file_path: '..\lib\event_filters\eyetracker.py'
            class_name: EyeTrackerEventParser
            stream_filtered_only: True
            params:
                adaptive_vel_thresh_history: 5.0
                position_filter:
                    name: MovingWindowFilter
                    length: 3
                    knot_pos: center
                    #weights:
                velocity_filter:
                    name:  MedianFilter
                    length: 3
                    knot_pos: center
                    #weights:
screen_capture:
    screen_index: 0
    screen_resolution: [1280, 1024]

    ffmpeg:
        path: '..\..\..\bin\ffmpeg\bin'
        exe: ffmpeg.exe
        stdout_file: ffmpeg_stdout
        stderr_file: ffmpeg_stderr
        
    dshow_filters:
        # Screen captue frames are taken by using Screen Capture Recorder
        #   software. The installer in in the dependancies folder of the
        #   project. This filter MUST be installed and configured or User
        #   Monitor will not work.
        #
        video: screen-capture-recorder
        # audio options: 
        #   leave blank: no audio saved to screen cap video
        #   virtual-audio-capturer: save sound from computer audio out.
        #   [ NOT WORKING ] Microphone: save what comes in the default audio input selected
        #       by / within the OS settings.     
        audio: virtual-audio-capturer
        ffmpeg_settings:
            #  real time buffer size (in K)
            rtbufsize: 1404000 # 2097152 K
            
    # params related to saving the screen stream to file
    media_file:
        name: screen_capture
        extension: mkv
        ffmpeg_settings:
            codec: libx264
            pix_fmt: yuv420p
            crf: 0 #18.0
            preset: ultrafast
            g: 250
            threads: 0
            
    #params related to the realtime stream to the experimenter app. 
    #
    http_stream:
        host: AUTO
        write_port: 8082
        read_port: 8084
        uri: screenstream
        ffmpeg_settings:
            scale: 1.0
            threads: 0
            # frame rate
            r: 30
            # bitrates (in K)
            b:
                # video
                v: 1600
            
################# ETS Experimenter Control & Monitoring Server #################

experimenter_server:
    address: AUTO
    port: AUTO

web_application:
    notifications:
        eyetracker:
            proportion_valid_samples:
                warning:
                    threshold: 85
                    edges:
                        falling: True
                    minimum_time_period: 2.5
                    growl:
                        text: "Warning: Valid Samples below 85%."
                        # Duration can be:
                        #    * a number, which is to be used to indicate number
                        #      seconds to display growl,
                        #    * MANUAL, which indicates experimenter must
                        #      manually close growl dialog,
                        #    * AUTO, which indicates growl should disappear when
                        #      value has dropped back below warning threshold
                        #      level programatically.
                        duration: AUTO
                error:
                    edges:
                        falling: True
                    minimum_time_period: 1.5
                    threshold: 25
                    growl:
                        text: "Valid Samples below 25%. Check participant positioning."
                        duration: MANUAL
            rms_noise:
                warning:
                    threshold: 20
                    edges:
                        rising: True
                    minimum_time_period: 1

        input_computer:
            cpu_usage_all:
                warning:
                    threshold: 80
                    edges:
                        rising: True
                    minimum_time_period: 0.5

        server_computer:
            cpu_usage_all:
                warning:
                    threshold: 80
                    edges:
                        rising: True
                    minimum_time_period: 0.5

manual_termination:
    keyboard:
        key: q
        modifier: CONTROL_LEFT
        
event_loop_rate: 0.005

############# Misc ##############

noise_calculation:
   win_size: 0.2